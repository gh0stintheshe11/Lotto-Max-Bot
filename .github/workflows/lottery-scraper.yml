name: Lottery Data Scraper

on:
  schedule:
    # Runs at 03:00 UTC (which is late evening ET) on Wednesday and Saturday
    # This ensures we catch the Tuesday and Friday draws
    - cron: '0 3 * * 3,6'
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  scrape-and-recommend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 pandas

    - name: Run scraper
      run: |
        python scrape.py

    - name: Run formatter
      run: |
        python formatter.py

    - name: Generate recommendations
      run: |
        # Create directory if it doesn't exist
        mkdir -p recommendation_history
        # Get the latest draw date and recommendations
        python recommender.py > recommendations.txt
        # Get the latest draw date from the CSV
        DRAW_DATE=$(tail -n 1 lottery_results.csv | cut -d',' -f1)
        cp recommendations.txt "recommendation_history/${DRAW_DATE}_recommendations.txt"

    - name: Read recommendations
      id: read_recommendations
      run: |
        # Get first 1800 chars (leaving room for formatting) up to last complete line
        PART1=$(head -c 1800 recommendations.txt | sed -n '1,/.*$/{p;/.*$/q}')
        # Get the rest
        PART2=$(tail -c +${#PART1} recommendations.txt)
        
        echo "RECOMMENDATIONS_1<<EOF" >> $GITHUB_ENV
        echo "$PART1" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "RECOMMENDATIONS_2<<EOF" >> $GITHUB_ENV
        echo "$PART2" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Send to Discord (Part 1)
      if: always()
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: |
          New Lotto Max recommendations generated!
          ```
          ${{ env.RECOMMENDATIONS_1 }}
          ```

    - name: Wait 1
      run: sleep 2

    - name: Send to Discord (Part 2)
      if: always()
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: |
          ```
          ${{ env.RECOMMENDATIONS_2 }}
          ```

    - name: Check for changes
      id: check_changes
      run: |
        git diff --quiet lottery_results_final.json lottery_results.csv recommendation_history || echo "changes=true" >> $GITHUB_OUTPUT

    - name: Commit and push if changes exist
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add lottery_results_final.json lottery_results.csv recommendation_history/
        git commit -m "Update lottery data and recommendations [automated]"
        git push
      env:
        GITHUB_TOKEN: ${{ github.token }}